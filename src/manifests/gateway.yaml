# NOTE: Before deploying to a production environment, please review the documentation -> https://aka.ms/self-hosted-gateway-production
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: aks-env
  labels:
    app: aks
data:
  config.service.endpoint: "<APIM Instance Name>.configuration.azure-api.net"
  neighborhood.host: "aks-instance-discovery"
  runtime.deployment.artifact.source: "Azure Portal"
  runtime.deployment.mechanism: "YAML"
  runtime.deployment.orchestrator.type: "Kubernetes"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks
  labels:
    app: aks
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: aks
    spec:
      terminationGracePeriodSeconds: 60
      tolerations:
        - key: "type"
          operator: "Equal"
          value: "gateway"
          effect: "NoSchedule"
      containers:
      - name: apim-gateway
        image: mcr.microsoft.com/azure-api-management/gateway:v2
        resources:
          limits:
            memory: 2Gi
            cpu: 4
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8081
          # Container port used for rate limiting to discover instances
        - name: rate-limit-dc
          protocol: UDP
          containerPort: 4290
          # Container port used for instances to send heartbeats to each other
        - name: dc-heartbeat
          protocol: UDP
          containerPort: 4291
        readinessProbe:
          httpGet:
            path: /status-0123456789abcdef
            port: http
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        env:
        - name: config.service.auth
          valueFrom:
            secretKeyRef:
              name: aks-token
              key: value
        - name: k8s.ingress.namespace
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: k8s.ingress.enabled
          value: "true"
        envFrom:
        - configMapRef:
            name: aks-env
---
apiVersion: v1
kind: Service
metadata:
  name: aks-live-traffic
  labels:
    app: aks
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: https
    port: 443
    targetPort: 8081
  selector:
    app: aks
---
apiVersion: v1
kind: Service
metadata:
  name: aks-instance-discovery
  labels:
    app: aks
  annotations:
    azure.apim.kubernetes.io/notes: "Headless service being used for instance discovery of self-hosted gateway"
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: rate-limit-discovery
    port: 4290
    targetPort: rate-limit-dc
    protocol: UDP
  - name: discovery-heartbeat
    port: 4291
    targetPort: dc-heartbeat
    protocol: UDP
  selector:
    app: aks

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-rbac
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io